export { useScriptTriggerConsent, useScriptEventPage, useScriptTriggerElement, useScript, useScriptGoogleAnalytics, useScriptPlausibleAnalytics, useScriptClarity, useScriptCloudflareWebAnalytics, useScriptFathomAnalytics, useScriptMatomoAnalytics, useScriptGoogleTagManager, useScriptGoogleAdsense, useScriptSegment, useScriptMetaPixel, useScriptXPixel, useScriptIntercom, useScriptHotjar, useScriptStripe, useScriptLemonSqueezy, useScriptVimeoPlayer, useScriptYouTubePlayer, useScriptGoogleMaps, useScriptNpm, useScriptCrisp } from '#app/composables/script-stubs';
export { isVue2, isVue3 } from 'vue-demi';
export { defineNuxtLink } from '#app/components/nuxt-link';
export { useNuxtApp, tryUseNuxtApp, defineNuxtPlugin, definePayloadPlugin, useRuntimeConfig, defineAppConfig } from '#app/nuxt';
export { requestIdleCallback, cancelIdleCallback } from '#app/compat/idle-callback';
export { setInterval } from '#app/compat/interval';
export { useAppConfig, updateAppConfig } from '#app/config';
export { defineNuxtComponent } from '#app/composables/component';
export { useAsyncData, useLazyAsyncData, useNuxtData, refreshNuxtData, clearNuxtData } from '#app/composables/asyncData';
export { useHydration } from '#app/composables/hydrate';
export { callOnce } from '#app/composables/once';
export { useState, clearNuxtState } from '#app/composables/state';
export { clearError, createError, isNuxtError, showError, useError } from '#app/composables/error';
export { useFetch, useLazyFetch } from '#app/composables/fetch';
export { useCookie, refreshCookie } from '#app/composables/cookie';
export { onPrehydrate, prerenderRoutes, useRequestHeader, useRequestHeaders, useRequestEvent, useRequestFetch, setResponseStatus } from '#app/composables/ssr';
export { onNuxtReady } from '#app/composables/ready';
export { preloadComponents, prefetchComponents, preloadRouteComponents } from '#app/composables/preload';
export { abortNavigation, addRouteMiddleware, defineNuxtRouteMiddleware, setPageLayout, navigateTo, useRoute, useRouter } from '#app/composables/router';
export { isPrerendered, loadPayload, preloadPayload, definePayloadReducer, definePayloadReviver } from '#app/composables/payload';
export { useLoadingIndicator } from '#app/composables/loading-indicator';
export { getAppManifest, getRouteRules } from '#app/composables/manifest';
export { reloadNuxtApp } from '#app/composables/chunk';
export { useRequestURL } from '#app/composables/url';
export { usePreviewMode } from '#app/composables/preview';
export { useRouteAnnouncer } from '#app/composables/route-announcer';
export { onBeforeRouteLeave, onBeforeRouteUpdate, useLink } from 'vue-router';
export { withCtx, withDirectives, withKeys, withMemo, withModifiers, withScopeId, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onServerPrefetch, onUnmounted, onUpdated, computed, customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref, watch, watchEffect, watchPostEffect, watchSyncEffect, isShallow, effect, effectScope, getCurrentScope, onScopeDispose, defineComponent, defineAsyncComponent, resolveComponent, getCurrentInstance, h, inject, hasInjectionContext, nextTick, provide, defineModel, defineOptions, defineSlots, mergeModels, toValue, useModel, useAttrs, useCssModule, useCssVars, useSlots, useTransitionState, useId, useTemplateRef, useShadowRoot, Component, ComponentPublicInstance, ComputedRef, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode } from 'vue';
export { injectHead, useHead, useSeoMeta, useHeadSafe, useServerHead, useServerSeoMeta, useServerHeadSafe } from '@unhead/vue';
export { logOut, getFreshToken } from '../composables/useAuth';
export { useFetchExtended } from '../composables/useFetchExtended';
export { usePlayer } from '../composables/usePlayer';
export { useSpotify } from '../composables/useSpotify';
export { useSpotifyAuth } from '../composables/useSpotifyAuth';
export { default as useSpotifyPlayer } from '../composables/useSpotifyPlayer';
export { useToast } from '../composables/useToast';
export { convertTimeToReadable, copyCode } from '../utils/index';
export { add as lodashAdd, after as lodashAfter, ary as lodashAry, assign as lodashAssign, assignIn as lodashAssignIn, assignInWith as lodashAssignInWith, assignWith as lodashAssignWith, at as lodashAt, attempt as lodashAttempt, before as lodashBefore, bind as lodashBind, bindAll as lodashBindAll, bindKey as lodashBindKey, camelCase as lodashCamelCase, capitalize as lodashCapitalize, castArray as lodashCastArray, ceil as lodashCeil, chain as lodashChain, chunk as lodashChunk, clamp as lodashClamp, clone as lodashClone, cloneDeep as lodashCloneDeep, cloneDeepWith as lodashCloneDeepWith, cloneWith as lodashCloneWith, compact as lodashCompact, concat as lodashConcat, cond as lodashCond, conforms as lodashConforms, conformsTo as lodashConformsTo, constant as lodashConstant, countBy as lodashCountBy, create as lodashCreate, curry as lodashCurry, curryRight as lodashCurryRight, debounce as lodashDebounce, deburr as lodashDeburr, defaultTo as lodashDefaultTo, defaults as lodashDefaults, defaultsDeep as lodashDefaultsDeep, defer as lodashDefer, delay as lodashDelay, difference as lodashDifference, differenceBy as lodashDifferenceBy, differenceWith as lodashDifferenceWith, divide as lodashDivide, drop as lodashDrop, dropRight as lodashDropRight, dropRightWhile as lodashDropRightWhile, dropWhile as lodashDropWhile, each as lodashEach, eachRight as lodashEachRight, endsWith as lodashEndsWith, entries as lodashEntries, entriesIn as lodashEntriesIn, eq as lodashEq, escape as lodashEscape, escapeRegExp as lodashEscapeRegExp, every as lodashEvery, extend as lodashExtend, extendWith as lodashExtendWith, fill as lodashFill, filter as lodashFilter, find as lodashFind, findIndex as lodashFindIndex, findKey as lodashFindKey, findLast as lodashFindLast, findLastIndex as lodashFindLastIndex, findLastKey as lodashFindLastKey, first as lodashFirst, flatMap as lodashFlatMap, flatMapDeep as lodashFlatMapDeep, flatMapDepth as lodashFlatMapDepth, flatten as lodashFlatten, flattenDeep as lodashFlattenDeep, flattenDepth as lodashFlattenDepth, flip as lodashFlip, floor as lodashFloor, flow as lodashFlow, flowRight as lodashFlowRight, forEach as lodashForEach, forEachRight as lodashForEachRight, forIn as lodashForIn, forInRight as lodashForInRight, forOwn as lodashForOwn, forOwnRight as lodashForOwnRight, fromPairs as lodashFromPairs, functions as lodashFunctions, functionsIn as lodashFunctionsIn, get as lodashGet, groupBy as lodashGroupBy, gt as lodashGt, gte as lodashGte, has as lodashHas, hasIn as lodashHasIn, identity as lodashIdentity, inRange as lodashInRange, includes as lodashIncludes, indexOf as lodashIndexOf, initial as lodashInitial, intersection as lodashIntersection, intersectionBy as lodashIntersectionBy, intersectionWith as lodashIntersectionWith, invert as lodashInvert, invertBy as lodashInvertBy, invoke as lodashInvoke, invokeMap as lodashInvokeMap, isArguments as lodashIsArguments, isArray as lodashIsArray, isArrayBuffer as lodashIsArrayBuffer, isArrayLike as lodashIsArrayLike, isArrayLikeObject as lodashIsArrayLikeObject, isBoolean as lodashIsBoolean, isBuffer as lodashIsBuffer, isDate as lodashIsDate, isElement as lodashIsElement, isEmpty as lodashIsEmpty, isEqual as lodashIsEqual, isEqualWith as lodashIsEqualWith, isError as lodashIsError, isFinite as lodashIsFinite, isFunction as lodashIsFunction, isInteger as lodashIsInteger, isLength as lodashIsLength, isMap as lodashIsMap, isMatch as lodashIsMatch, isMatchWith as lodashIsMatchWith, isNaN as lodashIsNaN, isNative as lodashIsNative, isNil as lodashIsNil, isNull as lodashIsNull, isNumber as lodashIsNumber, isObject as lodashIsObject, isObjectLike as lodashIsObjectLike, isPlainObject as lodashIsPlainObject, isRegExp as lodashIsRegExp, isSafeInteger as lodashIsSafeInteger, isSet as lodashIsSet, isString as lodashIsString, isSymbol as lodashIsSymbol, isTypedArray as lodashIsTypedArray, isUndefined as lodashIsUndefined, isWeakMap as lodashIsWeakMap, isWeakSet as lodashIsWeakSet, iteratee as lodashIteratee, join as lodashJoin, kebabCase as lodashKebabCase, keyBy as lodashKeyBy, keys as lodashKeys, keysIn as lodashKeysIn, last as lodashLast, lastIndexOf as lodashLastIndexOf, lowerCase as lodashLowerCase, lowerFirst as lodashLowerFirst, lt as lodashLt, lte as lodashLte, map as lodashMap, mapKeys as lodashMapKeys, mapValues as lodashMapValues, matches as lodashMatches, matchesProperty as lodashMatchesProperty, max as lodashMax, maxBy as lodashMaxBy, mean as lodashMean, meanBy as lodashMeanBy, memoize as lodashMemoize, merge as lodashMerge, mergeWith as lodashMergeWith, method as lodashMethod, methodOf as lodashMethodOf, min as lodashMin, minBy as lodashMinBy, mixin as lodashMixin, multiply as lodashMultiply, negate as lodashNegate, noop as lodashNoop, now as lodashNow, nth as lodashNth, nthArg as lodashNthArg, omit as lodashOmit, omitBy as lodashOmitBy, once as lodashOnce, orderBy as lodashOrderBy, over as lodashOver, overArgs as lodashOverArgs, overEvery as lodashOverEvery, overSome as lodashOverSome, pad as lodashPad, padEnd as lodashPadEnd, padStart as lodashPadStart, parseInt as lodashParseInt, partial as lodashPartial, partialRight as lodashPartialRight, partition as lodashPartition, pick as lodashPick, pickBy as lodashPickBy, property as lodashProperty, propertyOf as lodashPropertyOf, pull as lodashPull, pullAll as lodashPullAll, pullAllBy as lodashPullAllBy, pullAllWith as lodashPullAllWith, pullAt as lodashPullAt, random as lodashRandom, range as lodashRange, rangeRight as lodashRangeRight, rearg as lodashRearg, reduce as lodashReduce, reduceRight as lodashReduceRight, reject as lodashReject, remove as lodashRemove, repeat as lodashRepeat, replace as lodashReplace, rest as lodashRest, result as lodashResult, reverse as lodashReverse, round as lodashRound, sample as lodashSample, sampleSize as lodashSampleSize, set as lodashSet, setWith as lodashSetWith, shuffle as lodashShuffle, size as lodashSize, slice as lodashSlice, snakeCase as lodashSnakeCase, some as lodashSome, sortBy as lodashSortBy, sortedIndex as lodashSortedIndex, sortedIndexBy as lodashSortedIndexBy, sortedIndexOf as lodashSortedIndexOf, sortedLastIndex as lodashSortedLastIndex, sortedLastIndexBy as lodashSortedLastIndexBy, sortedLastIndexOf as lodashSortedLastIndexOf, sortedUniq as lodashSortedUniq, sortedUniqBy as lodashSortedUniqBy, split as lodashSplit, spread as lodashSpread, startCase as lodashStartCase, startsWith as lodashStartsWith, stubArray as lodashStubArray, stubFalse as lodashStubFalse, stubObject as lodashStubObject, stubString as lodashStubString, stubTrue as lodashStubTrue, subtract as lodashSubtract, sum as lodashSum, sumBy as lodashSumBy, tail as lodashTail, take as lodashTake, takeRight as lodashTakeRight, takeRightWhile as lodashTakeRightWhile, takeWhile as lodashTakeWhile, tap as lodashTap, template as lodashTemplate, throttle as lodashThrottle, times as lodashTimes, toArray as lodashToArray, toFinite as lodashToFinite, toInteger as lodashToInteger, toLength as lodashToLength, toLower as lodashToLower, toNumber as lodashToNumber, toPairs as lodashToPairs, toPairsIn as lodashToPairsIn, toPath as lodashToPath, toPlainObject as lodashToPlainObject, toSafeInteger as lodashToSafeInteger, toString as lodashToString, toUpper as lodashToUpper, transform as lodashTransform, trim as lodashTrim, trimEnd as lodashTrimEnd, trimStart as lodashTrimStart, truncate as lodashTruncate, unary as lodashUnary, unescape as lodashUnescape, union as lodashUnion, unionBy as lodashUnionBy, unionWith as lodashUnionWith, uniq as lodashUniq, uniqBy as lodashUniqBy, uniqWith as lodashUniqWith, uniqueId as lodashUniqueId, unset as lodashUnset, unzip as lodashUnzip, unzipWith as lodashUnzipWith, update as lodashUpdate, updateWith as lodashUpdateWith, upperCase as lodashUpperCase, upperFirst as lodashUpperFirst, values as lodashValues, valuesIn as lodashValuesIn, without as lodashWithout, words as lodashWords, wrap as lodashWrap, xor as lodashXor, xorBy as lodashXorBy, xorWith as lodashXorWith, zip as lodashZip, zipObject as lodashZipObject, zipObjectDeep as lodashZipObjectDeep, zipWith as lodashZipWith } from '../node_modules/.pnpm/nuxt-lodash@2.5.3_magicast@0.3.5_rollup@4.21.2/node_modules/nuxt-lodash/dist/runtime/lodash';
export { useNuxtDevTools } from '../node_modules/.pnpm/@nuxt+devtools@1.4.1_rollup@4.21.2_vite@5.4.3_@types+node@22.5.2_terser@5.31.6_/node_modules/@nuxt/devtools/dist/runtime/use-nuxt-devtools';
export { definePageMeta } from '../node_modules/.pnpm/nuxt@3.13.1_@parcel+watcher@2.4.1_@types+node@22.5.2_ioredis@5.4.1_magicast@0.3.5_rollup@4.21_c5a23o2uglxixihmv33pyy7vza/node_modules/nuxt/dist/pages/runtime/composables';